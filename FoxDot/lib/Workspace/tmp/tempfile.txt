from FoxDot.preset import *

change_bpm(120)

b1 >> darkpass([0,2,0,1,-2], darkpass_macro_1=linvar([0,1], 5), dur=clave23)
d1 >> play("X", sample=2, bits=1.5, crush=linvar([4,8,16], 2), amp=.5, dur=cascara)

d2 >> play("-", sample=2, dur=1/3).degrade()


reaproject.task_queue.set_inactive()
reaproject.update_reaproject()
print(reaproject)


reverb = [
    'ReaVerbate', 'reverb', 'verb base', {
        "Wet": "wet",
        "Dry": "dry",
        "Room size": "size"
    }
]
lpf = [
    'ReaEQ', 'lpf', 'lpf', {
        "Freq-Low Pass 4": "freq",
        "Q-Low Pass 4": "bw",
        "Gain-Low Pass 4": "gain"
    }
]
hpf = [
    'ReaEQ', 'hpf', 'hpf', {
        "Freq-High Pass 1": "freq",
        "Q-High Pass 1": "bw",
        "Gain-High Pass 1": "gain"
    }
]
hysteresis = [
    'Hysteresis', 'glitch', 'glitch1', {
        "Dry/Wet": "dw",
        "Randomize": "randomize",
    }
]
sverb = [
    'ValhallaSupermassive', 'sverb', 'sverb1', {
        "Mix": "dw",
        "Density": "density",
        "Feedback": "fb",
        "Width": "width",
        "Delay_Ms": "delay",
        "DelayWarp": "dwarp",
        "LowCut": "lowcut",
        "HighCut": "highcut",
        "ModRate": "modrate",
        "ModDepth": "moddepth",
    }
]
sur = ['ReaSurround', 'sur', 'hexa_spatial', {"in 1 X": "x", "in 1 Y": "y"}]
limit8 = ['ReaLimit', 'limit8', 'limit8', {}]
# hamp = ['ReaVerbate', 'reverb', 'testounet', {"Wet":"wet", "Dry":"dry", "Room size": "size"}]
# delay = ['ReaVerbate', 'reverb', 'testounet', {"Wet":"wet", "Dry":"dry", "Room size": "size"}]
full_effect_stack = [reverb, lpf, hpf, sur, limit8]


marimba = newintru(
    plugin_name='kontakt', name='marimba', params={}, effects=full_effect_stack
)

ceramic, ceramic_facade = newintru(
    plugin_name='vital',
    name='ceramic',
    params={
        "Macro 1": "mute",
        "Macro 2": "tone",
        "Macro 3": "sustain",
        "Macro 4": "mod"
    },
    effects=full_effect_stack
)

tt >> ceramic([0,2], ceramic_tone=linvar([0,1]))
tt >> chan1([0,2], ceramic_mod=linvar([0,1]))

reaproject.update_reaproject()




print(reaproject)

print(type(ceramic))